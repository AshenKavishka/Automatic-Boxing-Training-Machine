
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000af4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000af4  00000b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080007a  0080007a  00000ba2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ba2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bd4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000c10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d67  00000000  00000000  00000c88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c6  00000000  00000000  000019ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000583  00000000  00000000  000020b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  00002638  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000428  00000000  00000000  00002778  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000836  00000000  00000000  00002ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000033d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
   4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
   c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  24:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__vector_9>
  28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
  50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 40       	sbci	r16, 0x00	; 0
  56:	7a 10       	cpse	r7, r10
  58:	f3 5a       	subi	r31, 0xA3	; 163
  5a:	00 a0       	ldd	r0, Z+32	; 0x20
  5c:	72 4e       	sbci	r23, 0xE2	; 226
  5e:	18 09       	sbc	r17, r8
  60:	00 10       	cpse	r0, r0
  62:	a5 d4       	rcall	.+2378   	; 0x9ae <__ftoa_engine+0xdc>
  64:	e8 00       	.word	0x00e8	; ????
  66:	00 e8       	ldi	r16, 0x80	; 128
  68:	76 48       	sbci	r23, 0x86	; 134
  6a:	17 00       	.word	0x0017	; ????
  6c:	00 e4       	ldi	r16, 0x40	; 64
  6e:	0b 54       	subi	r16, 0x4B	; 75
  70:	02 00       	.word	0x0002	; ????
  72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
  74:	9a 3b       	cpi	r25, 0xBA	; 186
  76:	00 00       	nop
  78:	00 e1       	ldi	r16, 0x10	; 16
  7a:	f5 05       	cpc	r31, r5
  7c:	00 00       	nop
  7e:	80 96       	adiw	r24, 0x20	; 32
  80:	98 00       	.word	0x0098	; ????
  82:	00 00       	nop
  84:	40 42       	sbci	r20, 0x20	; 32
  86:	0f 00       	.word	0x000f	; ????
  88:	00 00       	nop
  8a:	a0 86       	std	Z+8, r10	; 0x08
  8c:	01 00       	.word	0x0001	; ????
  8e:	00 00       	nop
  90:	10 27       	eor	r17, r16
  92:	00 00       	nop
  94:	00 00       	nop
  96:	e8 03       	fmulsu	r22, r16
  98:	00 00       	nop
  9a:	00 00       	nop
  9c:	64 00       	.word	0x0064	; ????
  9e:	00 00       	nop
  a0:	00 00       	nop
  a2:	0a 00       	.word	0x000a	; ????
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	01 00       	.word	0x0001	; ????
  aa:	00 00       	nop
  ac:	00 00       	nop
  ae:	2c 76       	andi	r18, 0x6C	; 108
  b0:	d8 88       	ldd	r13, Y+16	; 0x10
  b2:	dc 67       	ori	r29, 0x7C	; 124
  b4:	4f 08       	sbc	r4, r15
  b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
  b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
  ba:	ae 59       	subi	r26, 0x9E	; 158
  bc:	e1 b1       	in	r30, 0x01	; 1
  be:	b7 96       	adiw	r30, 0x27	; 39
  c0:	e5 e3       	ldi	r30, 0x35	; 53
  c2:	e4 53       	subi	r30, 0x34	; 52
  c4:	c6 3a       	cpi	r28, 0xA6	; 166
  c6:	e6 51       	subi	r30, 0x16	; 22
  c8:	99 76       	andi	r25, 0x69	; 105
  ca:	96 e8       	ldi	r25, 0x86	; 134
  cc:	e6 c2       	rjmp	.+1484   	; 0x69a <dtoa_prf+0x7c>
  ce:	84 26       	eor	r8, r20
  d0:	eb 89       	ldd	r30, Y+19	; 0x13
  d2:	8c 9b       	sbis	0x11, 4	; 17
  d4:	62 ed       	ldi	r22, 0xD2	; 210
  d6:	40 7c       	andi	r20, 0xC0	; 192
  d8:	6f fc       	.word	0xfc6f	; ????
  da:	ef bc       	out	0x2f, r14	; 47
  dc:	9c 9f       	mul	r25, r28
  de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
  e0:	ba a5       	ldd	r27, Y+42	; 0x2a
  e2:	6f a5       	ldd	r22, Y+47	; 0x2f
  e4:	f4 90       	lpm	r15, Z
  e6:	05 5a       	subi	r16, 0xA5	; 165
  e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
  ea:	5c 93       	st	X, r21
  ec:	6b 6c       	ori	r22, 0xCB	; 203
  ee:	f9 67       	ori	r31, 0x79	; 121
  f0:	6d c1       	rjmp	.+730    	; 0x3cc <ultrasonic+0x4a>
  f2:	1b fc       	.word	0xfc1b	; ????
  f4:	e0 e4       	ldi	r30, 0x40	; 64
  f6:	0d 47       	sbci	r16, 0x7D	; 125
  f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
  fa:	20 e6       	ldi	r18, 0x60	; 96
  fc:	b5 00       	.word	0x00b5	; ????
  fe:	d0 ed       	ldi	r29, 0xD0	; 208
 100:	90 2e       	mov	r9, r16
 102:	03 00       	.word	0x0003	; ????
 104:	94 35       	cpi	r25, 0x54	; 84
 106:	77 05       	cpc	r23, r7
 108:	00 80       	ld	r0, Z
 10a:	84 1e       	adc	r8, r20
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 20       	and	r0, r0
 110:	4e 0a       	sbc	r4, r30
 112:	00 00       	nop
 114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
 116:	0c 33       	cpi	r16, 0x3C	; 60
 118:	33 33       	cpi	r19, 0x33	; 51
 11a:	33 0f       	add	r19, r19
 11c:	98 6e       	ori	r25, 0xE8	; 232
 11e:	12 83       	std	Z+2, r17	; 0x02
 120:	11 41       	sbci	r17, 0x11	; 17
 122:	ef 8d       	ldd	r30, Y+31	; 0x1f
 124:	21 14       	cp	r2, r1
 126:	89 3b       	cpi	r24, 0xB9	; 185
 128:	e6 55       	subi	r30, 0x56	; 86
 12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
 12c:	fe e6       	ldi	r31, 0x6E	; 110
 12e:	db 18       	sub	r13, r11
 130:	d1 84       	ldd	r13, Z+9	; 0x09
 132:	4b 38       	cpi	r20, 0x8B	; 139
 134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
 136:	7c 1d       	adc	r23, r12
 138:	90 1d       	adc	r25, r0
 13a:	a4 bb       	out	0x14, r26	; 20
 13c:	e4 24       	eor	r14, r4
 13e:	20 32       	cpi	r18, 0x20	; 32
 140:	84 72       	andi	r24, 0x24	; 36
 142:	5e 22       	and	r5, r30
 144:	81 00       	.word	0x0081	; ????
 146:	c9 f1       	breq	.+114    	; 0x1ba <stepper_motor_clockwise>
 148:	24 ec       	ldi	r18, 0xC4	; 196
 14a:	a1 e5       	ldi	r26, 0x51	; 81
 14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
 14e:	11 24       	eor	r1, r1
 150:	1f be       	out	0x3f, r1	; 63
 152:	cf e5       	ldi	r28, 0x5F	; 95
 154:	d8 e0       	ldi	r29, 0x08	; 8
 156:	de bf       	out	0x3e, r29	; 62
 158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
 15a:	10 e0       	ldi	r17, 0x00	; 0
 15c:	a0 e6       	ldi	r26, 0x60	; 96
 15e:	b0 e0       	ldi	r27, 0x00	; 0
 160:	e4 ef       	ldi	r30, 0xF4	; 244
 162:	fa e0       	ldi	r31, 0x0A	; 10
 164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
 166:	05 90       	lpm	r0, Z+
 168:	0d 92       	st	X+, r0
 16a:	aa 37       	cpi	r26, 0x7A	; 122
 16c:	b1 07       	cpc	r27, r17
 16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	aa e7       	ldi	r26, 0x7A	; 122
 174:	b0 e0       	ldi	r27, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
 178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
 17a:	ac 37       	cpi	r26, 0x7C	; 124
 17c:	b2 07       	cpc	r27, r18
 17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
 180:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <main>
 184:	0c 94 78 05 	jmp	0xaf0	; 0xaf0 <_exit>

00000188 <__bad_interrupt>:
 188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <__vector_9>:


int TimerOverflow = 0;

ISR(TIMER1_OVF_vect)
{
 18c:	1f 92       	push	r1
 18e:	0f 92       	push	r0
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	0f 92       	push	r0
 194:	11 24       	eor	r1, r1
 196:	8f 93       	push	r24
 198:	9f 93       	push	r25
	TimerOverflow++;	/* Increment Timer Overflow count */
 19a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
 19e:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__data_end+0x1>
 1a8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__data_end>
}
 1ac:	9f 91       	pop	r25
 1ae:	8f 91       	pop	r24
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <stepper_motor_clockwise>:
}
 void stepper_motor_clockwise()
 {
	 /* Rotate Stepper Motor clockwise with Half step sequence */

          PORTC = 0x05;
 1ba:	85 e0       	ldi	r24, 0x05	; 5
 1bc:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1be:	2f ef       	ldi	r18, 0xFF	; 255
 1c0:	35 ea       	ldi	r19, 0xA5	; 165
 1c2:	9e e0       	ldi	r25, 0x0E	; 14
 1c4:	21 50       	subi	r18, 0x01	; 1
 1c6:	30 40       	sbci	r19, 0x00	; 0
 1c8:	90 40       	sbci	r25, 0x00	; 0
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <stepper_motor_clockwise+0xa>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <stepper_motor_clockwise+0x14>
 1ce:	00 00       	nop
          _delay_ms(300);
          PORTC = 0x06;
 1d0:	96 e0       	ldi	r25, 0x06	; 6
 1d2:	95 bb       	out	0x15, r25	; 21
 1d4:	2f ef       	ldi	r18, 0xFF	; 255
 1d6:	35 ea       	ldi	r19, 0xA5	; 165
 1d8:	9e e0       	ldi	r25, 0x0E	; 14
 1da:	21 50       	subi	r18, 0x01	; 1
 1dc:	30 40       	sbci	r19, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <stepper_motor_clockwise+0x20>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <stepper_motor_clockwise+0x2a>
 1e4:	00 00       	nop
          _delay_ms(300);
          PORTC = 0x0A;
 1e6:	9a e0       	ldi	r25, 0x0A	; 10
 1e8:	95 bb       	out	0x15, r25	; 21
 1ea:	2f ef       	ldi	r18, 0xFF	; 255
 1ec:	35 ea       	ldi	r19, 0xA5	; 165
 1ee:	9e e0       	ldi	r25, 0x0E	; 14
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	30 40       	sbci	r19, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <stepper_motor_clockwise+0x36>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <stepper_motor_clockwise+0x40>
 1fa:	00 00       	nop
          _delay_ms(300);
          PORTC = 0x09;
 1fc:	99 e0       	ldi	r25, 0x09	; 9
 1fe:	95 bb       	out	0x15, r25	; 21
 200:	2f ef       	ldi	r18, 0xFF	; 255
 202:	35 ea       	ldi	r19, 0xA5	; 165
 204:	9e e0       	ldi	r25, 0x0E	; 14
 206:	21 50       	subi	r18, 0x01	; 1
 208:	30 40       	sbci	r19, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <stepper_motor_clockwise+0x4c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <stepper_motor_clockwise+0x56>
 210:	00 00       	nop
          _delay_ms(300);
		   PORTC = 0x05;
 212:	85 bb       	out	0x15, r24	; 21
 214:	2f ef       	ldi	r18, 0xFF	; 255
 216:	35 ea       	ldi	r19, 0xA5	; 165
 218:	8e e0       	ldi	r24, 0x0E	; 14
 21a:	21 50       	subi	r18, 0x01	; 1
 21c:	30 40       	sbci	r19, 0x00	; 0
 21e:	80 40       	sbci	r24, 0x00	; 0
 220:	e1 f7       	brne	.-8      	; 0x21a <stepper_motor_clockwise+0x60>
 222:	00 c0       	rjmp	.+0      	; 0x224 <stepper_motor_clockwise+0x6a>
 224:	00 00       	nop
 226:	08 95       	ret

00000228 <stepper_motor_anticlockwise>:
	 
 }
 void stepper_motor_anticlockwise()
 {
	 /* Rotate Stepper Motor Anticlockwise with half Full step sequence */
	 PORTC = 0x05;
 228:	85 e0       	ldi	r24, 0x05	; 5
 22a:	85 bb       	out	0x15, r24	; 21
 22c:	2f ef       	ldi	r18, 0xFF	; 255
 22e:	35 ea       	ldi	r19, 0xA5	; 165
 230:	9e e0       	ldi	r25, 0x0E	; 14
 232:	21 50       	subi	r18, 0x01	; 1
 234:	30 40       	sbci	r19, 0x00	; 0
 236:	90 40       	sbci	r25, 0x00	; 0
 238:	e1 f7       	brne	.-8      	; 0x232 <stepper_motor_anticlockwise+0xa>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <stepper_motor_anticlockwise+0x14>
 23c:	00 00       	nop
	 _delay_ms(300);
	 PORTC = 0x09;
 23e:	99 e0       	ldi	r25, 0x09	; 9
 240:	95 bb       	out	0x15, r25	; 21
 242:	2f ef       	ldi	r18, 0xFF	; 255
 244:	35 ea       	ldi	r19, 0xA5	; 165
 246:	9e e0       	ldi	r25, 0x0E	; 14
 248:	21 50       	subi	r18, 0x01	; 1
 24a:	30 40       	sbci	r19, 0x00	; 0
 24c:	90 40       	sbci	r25, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <stepper_motor_anticlockwise+0x20>
 250:	00 c0       	rjmp	.+0      	; 0x252 <stepper_motor_anticlockwise+0x2a>
 252:	00 00       	nop
	 _delay_ms(300);
	 PORTC = 0x0A;
 254:	9a e0       	ldi	r25, 0x0A	; 10
 256:	95 bb       	out	0x15, r25	; 21
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	35 ea       	ldi	r19, 0xA5	; 165
 25c:	9e e0       	ldi	r25, 0x0E	; 14
 25e:	21 50       	subi	r18, 0x01	; 1
 260:	30 40       	sbci	r19, 0x00	; 0
 262:	90 40       	sbci	r25, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <stepper_motor_anticlockwise+0x36>
 266:	00 c0       	rjmp	.+0      	; 0x268 <stepper_motor_anticlockwise+0x40>
 268:	00 00       	nop
	 _delay_ms(300);
	 PORTC = 0x06;
 26a:	96 e0       	ldi	r25, 0x06	; 6
 26c:	95 bb       	out	0x15, r25	; 21
 26e:	2f ef       	ldi	r18, 0xFF	; 255
 270:	35 ea       	ldi	r19, 0xA5	; 165
 272:	9e e0       	ldi	r25, 0x0E	; 14
 274:	21 50       	subi	r18, 0x01	; 1
 276:	30 40       	sbci	r19, 0x00	; 0
 278:	90 40       	sbci	r25, 0x00	; 0
 27a:	e1 f7       	brne	.-8      	; 0x274 <stepper_motor_anticlockwise+0x4c>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <stepper_motor_anticlockwise+0x56>
 27e:	00 00       	nop
	 _delay_ms(300);
	 PORTC = 0x05;
 280:	85 bb       	out	0x15, r24	; 21
 282:	2f ef       	ldi	r18, 0xFF	; 255
 284:	35 ea       	ldi	r19, 0xA5	; 165
 286:	8e e0       	ldi	r24, 0x0E	; 14
 288:	21 50       	subi	r18, 0x01	; 1
 28a:	30 40       	sbci	r19, 0x00	; 0
 28c:	80 40       	sbci	r24, 0x00	; 0
 28e:	e1 f7       	brne	.-8      	; 0x288 <stepper_motor_anticlockwise+0x60>
 290:	00 c0       	rjmp	.+0      	; 0x292 <stepper_motor_anticlockwise+0x6a>
 292:	00 00       	nop
 294:	08 95       	ret

00000296 <LCD_Command>:
	 return distance;
	 
 }
 void LCD_Command (char cmd)							/* LCD command write function */
 {
	 LCD_Data_Port = cmd;							/* Write command data to LCD data port */
 296:	88 bb       	out	0x18, r24	; 24
	 LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
 298:	82 b3       	in	r24, 0x12	; 18
 29a:	87 7e       	andi	r24, 0xE7	; 231
 29c:	82 bb       	out	0x12, r24	; 18
	 LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
 29e:	82 b3       	in	r24, 0x12	; 18
 2a0:	80 62       	ori	r24, 0x20	; 32
 2a2:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a4:	85 e0       	ldi	r24, 0x05	; 5
 2a6:	8a 95       	dec	r24
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <LCD_Command+0x10>
 2aa:	00 00       	nop
	 _delay_us(1);
	 LCD_Command_Port &= ~(1<<EN);
 2ac:	82 b3       	in	r24, 0x12	; 18
 2ae:	8f 7d       	andi	r24, 0xDF	; 223
 2b0:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b2:	8f ed       	ldi	r24, 0xDF	; 223
 2b4:	9e e2       	ldi	r25, 0x2E	; 46
 2b6:	01 97       	sbiw	r24, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <LCD_Command+0x20>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <LCD_Command+0x26>
 2bc:	00 00       	nop
 2be:	08 95       	ret

000002c0 <LCD_Char>:
	 _delay_ms(3);									/* Wait little bit */
 }

 void LCD_Char (char char_data)						/* LCD data write function */
 {
	 LCD_Data_Port = char_data;						/* Write data to LCD data port */
 2c0:	88 bb       	out	0x18, r24	; 24
	 LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 2c2:	82 b3       	in	r24, 0x12	; 18
 2c4:	8f 7e       	andi	r24, 0xEF	; 239
 2c6:	82 bb       	out	0x12, r24	; 18
	 LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 2c8:	82 b3       	in	r24, 0x12	; 18
 2ca:	88 62       	ori	r24, 0x28	; 40
 2cc:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ce:	85 e0       	ldi	r24, 0x05	; 5
 2d0:	8a 95       	dec	r24
 2d2:	f1 f7       	brne	.-4      	; 0x2d0 <LCD_Char+0x10>
 2d4:	00 00       	nop
	 _delay_us(1);
	 LCD_Command_Port &= ~(1<<EN);
 2d6:	82 b3       	in	r24, 0x12	; 18
 2d8:	8f 7d       	andi	r24, 0xDF	; 223
 2da:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2dc:	8f e9       	ldi	r24, 0x9F	; 159
 2de:	9f e0       	ldi	r25, 0x0F	; 15
 2e0:	01 97       	sbiw	r24, 0x01	; 1
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <LCD_Char+0x20>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_Char+0x26>
 2e6:	00 00       	nop
 2e8:	08 95       	ret

000002ea <LCD_Init>:
	 _delay_ms(1);									/* Wait little bit */
 }

 void LCD_Init (void)								/* LCD Initialize function */
 {
	 LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 2ea:	81 b3       	in	r24, 0x11	; 17
 2ec:	88 63       	ori	r24, 0x38	; 56
 2ee:	81 bb       	out	0x11, r24	; 17
	 LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 2f0:	8f ef       	ldi	r24, 0xFF	; 255
 2f2:	87 bb       	out	0x17, r24	; 23
 2f4:	2f ef       	ldi	r18, 0xFF	; 255
 2f6:	89 ef       	ldi	r24, 0xF9	; 249
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	21 50       	subi	r18, 0x01	; 1
 2fc:	80 40       	sbci	r24, 0x00	; 0
 2fe:	90 40       	sbci	r25, 0x00	; 0
 300:	e1 f7       	brne	.-8      	; 0x2fa <LCD_Init+0x10>
 302:	00 c0       	rjmp	.+0      	; 0x304 <LCD_Init+0x1a>
 304:	00 00       	nop
	 
	 _delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	 LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 306:	88 e3       	ldi	r24, 0x38	; 56
 308:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
	 LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 30c:	8c e0       	ldi	r24, 0x0C	; 12
 30e:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
	 LCD_Command (0x06);								/* Auto Increment cursor */
 312:	86 e0       	ldi	r24, 0x06	; 6
 314:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
	 LCD_Command (0x01);								/* Clear LCD command */
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
	 LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 31e:	80 e8       	ldi	r24, 0x80	; 128
 320:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
 324:	08 95       	ret

00000326 <LCD_String>:
 }

 void LCD_String (char *str)							/* Send string to LCD function */
 {
 326:	0f 93       	push	r16
 328:	1f 93       	push	r17
 32a:	cf 93       	push	r28
 32c:	df 93       	push	r29
 32e:	8c 01       	movw	r16, r24
	 int i;
	 for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 330:	c0 e0       	ldi	r28, 0x00	; 0
 332:	d0 e0       	ldi	r29, 0x00	; 0
 334:	03 c0       	rjmp	.+6      	; 0x33c <LCD_String+0x16>
	 {
		 LCD_Char (str[i]);							/* Call LCD data write */
 336:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_Char>
 }

 void LCD_String (char *str)							/* Send string to LCD function */
 {
	 int i;
	 for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 33a:	21 96       	adiw	r28, 0x01	; 1
 33c:	f8 01       	movw	r30, r16
 33e:	ec 0f       	add	r30, r28
 340:	fd 1f       	adc	r31, r29
 342:	80 81       	ld	r24, Z
 344:	81 11       	cpse	r24, r1
 346:	f7 cf       	rjmp	.-18     	; 0x336 <LCD_String+0x10>
	 {
		 LCD_Char (str[i]);							/* Call LCD data write */
	 }
 }
 348:	df 91       	pop	r29
 34a:	cf 91       	pop	r28
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	08 95       	ret

00000352 <LCD_String_xy>:

 void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
 {
 352:	cf 93       	push	r28
 354:	df 93       	push	r29
 356:	ea 01       	movw	r28, r20
	 if (row == 1)
 358:	81 30       	cpi	r24, 0x01	; 1
 35a:	31 f4       	brne	.+12     	; 0x368 <LCD_String_xy+0x16>
	 LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 35c:	86 2f       	mov	r24, r22
 35e:	8f 70       	andi	r24, 0x0F	; 15
 360:	80 68       	ori	r24, 0x80	; 128
 362:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
 366:	07 c0       	rjmp	.+14     	; 0x376 <LCD_String_xy+0x24>
	 else if (row == 2)
 368:	82 30       	cpi	r24, 0x02	; 2
 36a:	29 f4       	brne	.+10     	; 0x376 <LCD_String_xy+0x24>
	 LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 36c:	86 2f       	mov	r24, r22
 36e:	8f 70       	andi	r24, 0x0F	; 15
 370:	80 6c       	ori	r24, 0xC0	; 192
 372:	0e 94 4b 01 	call	0x296	; 0x296 <LCD_Command>
	 LCD_String(str);								/* Call LCD string function */
 376:	ce 01       	movw	r24, r28
 378:	0e 94 93 01 	call	0x326	; 0x326 <LCD_String>
 }
 37c:	df 91       	pop	r29
 37e:	cf 91       	pop	r28
 380:	08 95       	ret

00000382 <ultrasonic>:
		 }
		 
	 }
	 
 }
 int ultrasonic(){
 382:	8f 92       	push	r8
 384:	9f 92       	push	r9
 386:	af 92       	push	r10
 388:	bf 92       	push	r11
 38a:	ef 92       	push	r14
 38c:	ff 92       	push	r15
 38e:	0f 93       	push	r16
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
 39a:	2a 97       	sbiw	r28, 0x0a	; 10
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	f8 94       	cli
 3a0:	de bf       	out	0x3e, r29	; 62
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	cd bf       	out	0x3d, r28	; 61
	 char string[10];
	 unsigned long count;
	 int distance;
	 sei();			/* Enable global interrupt */
 3a6:	78 94       	sei
	 TIMSK = (1 << TOIE1);	/* Enable Timer1 overflow interrupts */
 3a8:	94 e0       	ldi	r25, 0x04	; 4
 3aa:	99 bf       	out	0x39, r25	; 57
	 TCCR1A = 0;		/* Set all bit to zero Normal operation */
 3ac:	1f bc       	out	0x2f, r1	; 47

	 /* Give 10us trigger pulse on trig. pin to HC-SR04 */
	 PORTA |= (1 << Trigger_pin);
 3ae:	8b b3       	in	r24, 0x1b	; 27
 3b0:	81 60       	ori	r24, 0x01	; 1
 3b2:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3b4:	20 e5       	ldi	r18, 0x50	; 80
 3b6:	2a 95       	dec	r18
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <ultrasonic+0x34>
	 _delay_us(15);
	 PORTA &= (~(1 << Trigger_pin));
 3ba:	8b b3       	in	r24, 0x1b	; 27
 3bc:	8e 7f       	andi	r24, 0xFE	; 254
 3be:	8b bb       	out	0x1b, r24	; 27
	 
	 TCNT1 = 0;	/* Clear Timer counter */
 3c0:	1d bc       	out	0x2d, r1	; 45
 3c2:	1c bc       	out	0x2c, r1	; 44
	 TCCR1B = 0x41;	/* Capture on rising edge, No prescaler*/
 3c4:	81 e4       	ldi	r24, 0x41	; 65
 3c6:	8e bd       	out	0x2e, r24	; 46
	 TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 3c8:	80 e2       	ldi	r24, 0x20	; 32
 3ca:	88 bf       	out	0x38, r24	; 56
	 TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 3cc:	98 bf       	out	0x38, r25	; 56

	 /*Calculate width of Echo by Input Capture (ICP) */
	 TimerOverflow = 0;/* Clear Timer overflow count */
 3ce:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
 3d2:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>
	 while ((TIFR & (1 << ICF1)) == 0);/* Wait for rising edge */
 3d6:	08 b6       	in	r0, 0x38	; 56
 3d8:	05 fe       	sbrs	r0, 5
 3da:	fd cf       	rjmp	.-6      	; 0x3d6 <ultrasonic+0x54>
	 TCNT1 = 0;	/* Clear Timer counter */
 3dc:	1d bc       	out	0x2d, r1	; 45
 3de:	1c bc       	out	0x2c, r1	; 44
	 TCCR1B = 0x01;	/* Capture on falling edge, No prescaler */
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	8e bd       	out	0x2e, r24	; 46
	 TIFR = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 3e4:	80 e2       	ldi	r24, 0x20	; 32
 3e6:	88 bf       	out	0x38, r24	; 56
	 TIFR = 1<<TOV1;	/* Clear Timer Overflow flag */
 3e8:	84 e0       	ldi	r24, 0x04	; 4
 3ea:	88 bf       	out	0x38, r24	; 56
	 

	 while ((TIFR & (1 << ICF1)) == 0);/* Wait for falling edge */
 3ec:	08 b6       	in	r0, 0x38	; 56
 3ee:	05 fe       	sbrs	r0, 5
 3f0:	fd cf       	rjmp	.-6      	; 0x3ec <ultrasonic+0x6a>
	 count = ICR1 +(65535 * TimerOverflow);	/* Take count */
 3f2:	46 b5       	in	r20, 0x26	; 38
 3f4:	57 b5       	in	r21, 0x27	; 39
 3f6:	a0 91 7a 00 	lds	r26, 0x007A	; 0x80007a <__data_end>
 3fa:	b0 91 7b 00 	lds	r27, 0x007B	; 0x80007b <__data_end+0x1>
 3fe:	2f ef       	ldi	r18, 0xFF	; 255
 400:	3f ef       	ldi	r19, 0xFF	; 255
 402:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__usmulhisi3>
 406:	64 0f       	add	r22, r20
 408:	75 1f       	adc	r23, r21
 40a:	81 1d       	adc	r24, r1
 40c:	91 1d       	adc	r25, r1
	 /* 8MHz Timer freq, sound speed =343 m/s */
	 distance = (int)(count/ 927);
 40e:	2f e9       	ldi	r18, 0x9F	; 159
 410:	33 e0       	ldi	r19, 0x03	; 3
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	0e 94 b7 02 	call	0x56e	; 0x56e <__udivmodsi4>
 41a:	49 01       	movw	r8, r18
 41c:	5a 01       	movw	r10, r20

	 dtostrf(distance,4,0, string);/* distance to string */
 41e:	b9 01       	movw	r22, r18
 420:	33 0f       	add	r19, r19
 422:	88 0b       	sbc	r24, r24
 424:	99 0b       	sbc	r25, r25
 426:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__floatsisf>
 42a:	9e 01       	movw	r18, r28
 42c:	2f 5f       	subi	r18, 0xFF	; 255
 42e:	3f 4f       	sbci	r19, 0xFF	; 255
 430:	79 01       	movw	r14, r18
 432:	89 01       	movw	r16, r18
 434:	20 e0       	ldi	r18, 0x00	; 0
 436:	44 e0       	ldi	r20, 0x04	; 4
 438:	0e 94 ef 02 	call	0x5de	; 0x5de <dtostrf>
	 strcat(string, " cm   ");	/* Concat unit i.e.cm */
 43c:	d7 01       	movw	r26, r14
 43e:	0d 90       	ld	r0, X+
 440:	00 20       	and	r0, r0
 442:	e9 f7       	brne	.-6      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 444:	11 97       	sbiw	r26, 0x01	; 1
 446:	87 e0       	ldi	r24, 0x07	; 7
 448:	e0 e6       	ldi	r30, 0x60	; 96
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	01 90       	ld	r0, Z+
 44e:	0d 92       	st	X+, r0
 450:	8a 95       	dec	r24
 452:	e1 f7       	brne	.-8      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
	 LCD_String_xy(2, 0, "Dis  = ");
 454:	47 e6       	ldi	r20, 0x67	; 103
 456:	50 e0       	ldi	r21, 0x00	; 0
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	82 e0       	ldi	r24, 0x02	; 2
 45c:	0e 94 a9 01 	call	0x352	; 0x352 <LCD_String_xy>
	 LCD_String_xy(2, 6, string);	/* Print distance */
 460:	a7 01       	movw	r20, r14
 462:	66 e0       	ldi	r22, 0x06	; 6
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	0e 94 a9 01 	call	0x352	; 0x352 <LCD_String_xy>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 46a:	3f ef       	ldi	r19, 0xFF	; 255
 46c:	83 ed       	ldi	r24, 0xD3	; 211
 46e:	90 e3       	ldi	r25, 0x30	; 48
 470:	31 50       	subi	r19, 0x01	; 1
 472:	80 40       	sbci	r24, 0x00	; 0
 474:	90 40       	sbci	r25, 0x00	; 0
 476:	e1 f7       	brne	.-8      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 478:	00 c0       	rjmp	.+0      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 47a:	00 00       	nop
	 _delay_ms(1000);
	 return distance;
	 
 }
 47c:	c4 01       	movw	r24, r8
 47e:	2a 96       	adiw	r28, 0x0a	; 10
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	f8 94       	cli
 484:	de bf       	out	0x3e, r29	; 62
 486:	0f be       	out	0x3f, r0	; 63
 488:	cd bf       	out	0x3d, r28	; 61
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	1f 91       	pop	r17
 490:	0f 91       	pop	r16
 492:	ff 90       	pop	r15
 494:	ef 90       	pop	r14
 496:	bf 90       	pop	r11
 498:	af 90       	pop	r10
 49a:	9f 90       	pop	r9
 49c:	8f 90       	pop	r8
 49e:	08 95       	ret

000004a0 <height_adjust>:
	    _delay_ms(100);*/
	
 }
 void height_adjust(){
	 
	int dist=ultrasonic();
 4a0:	0e 94 c1 01 	call	0x382	; 0x382 <ultrasonic>
	 if(dist>90){
 4a4:	8b 35       	cpi	r24, 0x5B	; 91
 4a6:	91 05       	cpc	r25, r1
 4a8:	2c f4       	brge	.+10     	; 0x4b4 <height_adjust+0x14>
 4aa:	08 c0       	rjmp	.+16     	; 0x4bc <height_adjust+0x1c>
		 while(dist>90){
			 stepper_motor_clockwise();
 4ac:	0e 94 dd 00 	call	0x1ba	; 0x1ba <stepper_motor_clockwise>
			 dist=ultrasonic();
 4b0:	0e 94 c1 01 	call	0x382	; 0x382 <ultrasonic>
 }
 void height_adjust(){
	 
	int dist=ultrasonic();
	 if(dist>90){
		 while(dist>90){
 4b4:	8b 35       	cpi	r24, 0x5B	; 91
 4b6:	91 05       	cpc	r25, r1
 4b8:	cc f7       	brge	.-14     	; 0x4ac <height_adjust+0xc>
 4ba:	08 95       	ret
			 

		 }
		 
	 }
	 else if(dist<90){
 4bc:	8a 35       	cpi	r24, 0x5A	; 90
 4be:	91 05       	cpc	r25, r1
 4c0:	2c f0       	brlt	.+10     	; 0x4cc <height_adjust+0x2c>
 4c2:	08 95       	ret
		 while(dist<90){
			 stepper_motor_anticlockwise();
 4c4:	0e 94 14 01 	call	0x228	; 0x228 <stepper_motor_anticlockwise>
			 dist=ultrasonic();
 4c8:	0e 94 c1 01 	call	0x382	; 0x382 <ultrasonic>

		 }
		 
	 }
	 else if(dist<90){
		 while(dist<90){
 4cc:	8a 35       	cpi	r24, 0x5A	; 90
 4ce:	91 05       	cpc	r25, r1
 4d0:	cc f3       	brlt	.-14     	; 0x4c4 <height_adjust+0x24>
 4d2:	08 95       	ret

000004d4 <main>:

int main(void)
{
	
	
	DDRA = 0x01;		/* Make trigger pin as output */
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	8a bb       	out	0x1a, r24	; 26
	PORTD = 0xFF;		/* Turn on Pull-up */
 4d8:	8f ef       	ldi	r24, 0xFF	; 255
 4da:	82 bb       	out	0x12, r24	; 18
	DDRC=0xFF;
 4dc:	84 bb       	out	0x14, r24	; 20
	
	LCD_Init();
 4de:	0e 94 75 01 	call	0x2ea	; 0x2ea <LCD_Init>
	LCD_String_xy(1, 0, "Ultrasonic");
 4e2:	4f e6       	ldi	r20, 0x6F	; 111
 4e4:	50 e0       	ldi	r21, 0x00	; 0
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	0e 94 a9 01 	call	0x352	; 0x352 <LCD_String_xy>
	
	
	while(1){
		height_adjust();
 4ee:	0e 94 50 02 	call	0x4a0	; 0x4a0 <height_adjust>
 4f2:	fd cf       	rjmp	.-6      	; 0x4ee <main+0x1a>

000004f4 <__floatunsisf>:
 4f4:	e8 94       	clt
 4f6:	09 c0       	rjmp	.+18     	; 0x50a <__floatsisf+0x12>

000004f8 <__floatsisf>:
 4f8:	97 fb       	bst	r25, 7
 4fa:	3e f4       	brtc	.+14     	; 0x50a <__floatsisf+0x12>
 4fc:	90 95       	com	r25
 4fe:	80 95       	com	r24
 500:	70 95       	com	r23
 502:	61 95       	neg	r22
 504:	7f 4f       	sbci	r23, 0xFF	; 255
 506:	8f 4f       	sbci	r24, 0xFF	; 255
 508:	9f 4f       	sbci	r25, 0xFF	; 255
 50a:	99 23       	and	r25, r25
 50c:	a9 f0       	breq	.+42     	; 0x538 <__floatsisf+0x40>
 50e:	f9 2f       	mov	r31, r25
 510:	96 e9       	ldi	r25, 0x96	; 150
 512:	bb 27       	eor	r27, r27
 514:	93 95       	inc	r25
 516:	f6 95       	lsr	r31
 518:	87 95       	ror	r24
 51a:	77 95       	ror	r23
 51c:	67 95       	ror	r22
 51e:	b7 95       	ror	r27
 520:	f1 11       	cpse	r31, r1
 522:	f8 cf       	rjmp	.-16     	; 0x514 <__floatsisf+0x1c>
 524:	fa f4       	brpl	.+62     	; 0x564 <__floatsisf+0x6c>
 526:	bb 0f       	add	r27, r27
 528:	11 f4       	brne	.+4      	; 0x52e <__floatsisf+0x36>
 52a:	60 ff       	sbrs	r22, 0
 52c:	1b c0       	rjmp	.+54     	; 0x564 <__floatsisf+0x6c>
 52e:	6f 5f       	subi	r22, 0xFF	; 255
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	16 c0       	rjmp	.+44     	; 0x564 <__floatsisf+0x6c>
 538:	88 23       	and	r24, r24
 53a:	11 f0       	breq	.+4      	; 0x540 <__floatsisf+0x48>
 53c:	96 e9       	ldi	r25, 0x96	; 150
 53e:	11 c0       	rjmp	.+34     	; 0x562 <__floatsisf+0x6a>
 540:	77 23       	and	r23, r23
 542:	21 f0       	breq	.+8      	; 0x54c <__floatsisf+0x54>
 544:	9e e8       	ldi	r25, 0x8E	; 142
 546:	87 2f       	mov	r24, r23
 548:	76 2f       	mov	r23, r22
 54a:	05 c0       	rjmp	.+10     	; 0x556 <__floatsisf+0x5e>
 54c:	66 23       	and	r22, r22
 54e:	71 f0       	breq	.+28     	; 0x56c <__floatsisf+0x74>
 550:	96 e8       	ldi	r25, 0x86	; 134
 552:	86 2f       	mov	r24, r22
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	2a f0       	brmi	.+10     	; 0x564 <__floatsisf+0x6c>
 55a:	9a 95       	dec	r25
 55c:	66 0f       	add	r22, r22
 55e:	77 1f       	adc	r23, r23
 560:	88 1f       	adc	r24, r24
 562:	da f7       	brpl	.-10     	; 0x55a <__floatsisf+0x62>
 564:	88 0f       	add	r24, r24
 566:	96 95       	lsr	r25
 568:	87 95       	ror	r24
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <__udivmodsi4>:
 56e:	a1 e2       	ldi	r26, 0x21	; 33
 570:	1a 2e       	mov	r1, r26
 572:	aa 1b       	sub	r26, r26
 574:	bb 1b       	sub	r27, r27
 576:	fd 01       	movw	r30, r26
 578:	0d c0       	rjmp	.+26     	; 0x594 <__udivmodsi4_ep>

0000057a <__udivmodsi4_loop>:
 57a:	aa 1f       	adc	r26, r26
 57c:	bb 1f       	adc	r27, r27
 57e:	ee 1f       	adc	r30, r30
 580:	ff 1f       	adc	r31, r31
 582:	a2 17       	cp	r26, r18
 584:	b3 07       	cpc	r27, r19
 586:	e4 07       	cpc	r30, r20
 588:	f5 07       	cpc	r31, r21
 58a:	20 f0       	brcs	.+8      	; 0x594 <__udivmodsi4_ep>
 58c:	a2 1b       	sub	r26, r18
 58e:	b3 0b       	sbc	r27, r19
 590:	e4 0b       	sbc	r30, r20
 592:	f5 0b       	sbc	r31, r21

00000594 <__udivmodsi4_ep>:
 594:	66 1f       	adc	r22, r22
 596:	77 1f       	adc	r23, r23
 598:	88 1f       	adc	r24, r24
 59a:	99 1f       	adc	r25, r25
 59c:	1a 94       	dec	r1
 59e:	69 f7       	brne	.-38     	; 0x57a <__udivmodsi4_loop>
 5a0:	60 95       	com	r22
 5a2:	70 95       	com	r23
 5a4:	80 95       	com	r24
 5a6:	90 95       	com	r25
 5a8:	9b 01       	movw	r18, r22
 5aa:	ac 01       	movw	r20, r24
 5ac:	bd 01       	movw	r22, r26
 5ae:	cf 01       	movw	r24, r30
 5b0:	08 95       	ret

000005b2 <__usmulhisi3>:
 5b2:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__umulhisi3>

000005b6 <__usmulhisi3_tail>:
 5b6:	b7 ff       	sbrs	r27, 7
 5b8:	08 95       	ret
 5ba:	82 1b       	sub	r24, r18
 5bc:	93 0b       	sbc	r25, r19
 5be:	08 95       	ret

000005c0 <__umulhisi3>:
 5c0:	a2 9f       	mul	r26, r18
 5c2:	b0 01       	movw	r22, r0
 5c4:	b3 9f       	mul	r27, r19
 5c6:	c0 01       	movw	r24, r0
 5c8:	a3 9f       	mul	r26, r19
 5ca:	70 0d       	add	r23, r0
 5cc:	81 1d       	adc	r24, r1
 5ce:	11 24       	eor	r1, r1
 5d0:	91 1d       	adc	r25, r1
 5d2:	b2 9f       	mul	r27, r18
 5d4:	70 0d       	add	r23, r0
 5d6:	81 1d       	adc	r24, r1
 5d8:	11 24       	eor	r1, r1
 5da:	91 1d       	adc	r25, r1
 5dc:	08 95       	ret

000005de <dtostrf>:
 5de:	ef 92       	push	r14
 5e0:	0f 93       	push	r16
 5e2:	1f 93       	push	r17
 5e4:	cf 93       	push	r28
 5e6:	df 93       	push	r29
 5e8:	e8 01       	movw	r28, r16
 5ea:	47 fd       	sbrc	r20, 7
 5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <dtostrf+0x14>
 5ee:	34 e0       	ldi	r19, 0x04	; 4
 5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <dtostrf+0x16>
 5f2:	34 e1       	ldi	r19, 0x14	; 20
 5f4:	04 2e       	mov	r0, r20
 5f6:	00 0c       	add	r0, r0
 5f8:	55 0b       	sbc	r21, r21
 5fa:	57 ff       	sbrs	r21, 7
 5fc:	03 c0       	rjmp	.+6      	; 0x604 <dtostrf+0x26>
 5fe:	51 95       	neg	r21
 600:	41 95       	neg	r20
 602:	51 09       	sbc	r21, r1
 604:	e3 2e       	mov	r14, r19
 606:	02 2f       	mov	r16, r18
 608:	24 2f       	mov	r18, r20
 60a:	ae 01       	movw	r20, r28
 60c:	0e 94 0f 03 	call	0x61e	; 0x61e <dtoa_prf>
 610:	ce 01       	movw	r24, r28
 612:	df 91       	pop	r29
 614:	cf 91       	pop	r28
 616:	1f 91       	pop	r17
 618:	0f 91       	pop	r16
 61a:	ef 90       	pop	r14
 61c:	08 95       	ret

0000061e <dtoa_prf>:
 61e:	a9 e0       	ldi	r26, 0x09	; 9
 620:	b0 e0       	ldi	r27, 0x00	; 0
 622:	e5 e1       	ldi	r30, 0x15	; 21
 624:	f3 e0       	ldi	r31, 0x03	; 3
 626:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <__prologue_saves__+0xc>
 62a:	6a 01       	movw	r12, r20
 62c:	12 2f       	mov	r17, r18
 62e:	b0 2e       	mov	r11, r16
 630:	2b e3       	ldi	r18, 0x3B	; 59
 632:	20 17       	cp	r18, r16
 634:	20 f0       	brcs	.+8      	; 0x63e <dtoa_prf+0x20>
 636:	ff 24       	eor	r15, r15
 638:	f3 94       	inc	r15
 63a:	f0 0e       	add	r15, r16
 63c:	02 c0       	rjmp	.+4      	; 0x642 <dtoa_prf+0x24>
 63e:	2c e3       	ldi	r18, 0x3C	; 60
 640:	f2 2e       	mov	r15, r18
 642:	0f 2d       	mov	r16, r15
 644:	27 e0       	ldi	r18, 0x07	; 7
 646:	ae 01       	movw	r20, r28
 648:	4f 5f       	subi	r20, 0xFF	; 255
 64a:	5f 4f       	sbci	r21, 0xFF	; 255
 64c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__ftoa_engine>
 650:	bc 01       	movw	r22, r24
 652:	49 81       	ldd	r20, Y+1	; 0x01
 654:	84 2f       	mov	r24, r20
 656:	89 70       	andi	r24, 0x09	; 9
 658:	81 30       	cpi	r24, 0x01	; 1
 65a:	31 f0       	breq	.+12     	; 0x668 <dtoa_prf+0x4a>
 65c:	e1 fc       	sbrc	r14, 1
 65e:	06 c0       	rjmp	.+12     	; 0x66c <dtoa_prf+0x4e>
 660:	e0 fe       	sbrs	r14, 0
 662:	06 c0       	rjmp	.+12     	; 0x670 <dtoa_prf+0x52>
 664:	90 e2       	ldi	r25, 0x20	; 32
 666:	05 c0       	rjmp	.+10     	; 0x672 <dtoa_prf+0x54>
 668:	9d e2       	ldi	r25, 0x2D	; 45
 66a:	03 c0       	rjmp	.+6      	; 0x672 <dtoa_prf+0x54>
 66c:	9b e2       	ldi	r25, 0x2B	; 43
 66e:	01 c0       	rjmp	.+2      	; 0x672 <dtoa_prf+0x54>
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	5e 2d       	mov	r21, r14
 674:	50 71       	andi	r21, 0x10	; 16
 676:	43 ff       	sbrs	r20, 3
 678:	3c c0       	rjmp	.+120    	; 0x6f2 <dtoa_prf+0xd4>
 67a:	91 11       	cpse	r25, r1
 67c:	02 c0       	rjmp	.+4      	; 0x682 <dtoa_prf+0x64>
 67e:	83 e0       	ldi	r24, 0x03	; 3
 680:	01 c0       	rjmp	.+2      	; 0x684 <dtoa_prf+0x66>
 682:	84 e0       	ldi	r24, 0x04	; 4
 684:	81 17       	cp	r24, r17
 686:	18 f4       	brcc	.+6      	; 0x68e <dtoa_prf+0x70>
 688:	21 2f       	mov	r18, r17
 68a:	28 1b       	sub	r18, r24
 68c:	01 c0       	rjmp	.+2      	; 0x690 <dtoa_prf+0x72>
 68e:	20 e0       	ldi	r18, 0x00	; 0
 690:	51 11       	cpse	r21, r1
 692:	0b c0       	rjmp	.+22     	; 0x6aa <dtoa_prf+0x8c>
 694:	f6 01       	movw	r30, r12
 696:	82 2f       	mov	r24, r18
 698:	30 e2       	ldi	r19, 0x20	; 32
 69a:	88 23       	and	r24, r24
 69c:	19 f0       	breq	.+6      	; 0x6a4 <dtoa_prf+0x86>
 69e:	31 93       	st	Z+, r19
 6a0:	81 50       	subi	r24, 0x01	; 1
 6a2:	fb cf       	rjmp	.-10     	; 0x69a <dtoa_prf+0x7c>
 6a4:	c2 0e       	add	r12, r18
 6a6:	d1 1c       	adc	r13, r1
 6a8:	20 e0       	ldi	r18, 0x00	; 0
 6aa:	99 23       	and	r25, r25
 6ac:	29 f0       	breq	.+10     	; 0x6b8 <dtoa_prf+0x9a>
 6ae:	d6 01       	movw	r26, r12
 6b0:	9c 93       	st	X, r25
 6b2:	f6 01       	movw	r30, r12
 6b4:	31 96       	adiw	r30, 0x01	; 1
 6b6:	6f 01       	movw	r12, r30
 6b8:	c6 01       	movw	r24, r12
 6ba:	03 96       	adiw	r24, 0x03	; 3
 6bc:	e2 fe       	sbrs	r14, 2
 6be:	0a c0       	rjmp	.+20     	; 0x6d4 <dtoa_prf+0xb6>
 6c0:	3e e4       	ldi	r19, 0x4E	; 78
 6c2:	d6 01       	movw	r26, r12
 6c4:	3c 93       	st	X, r19
 6c6:	41 e4       	ldi	r20, 0x41	; 65
 6c8:	11 96       	adiw	r26, 0x01	; 1
 6ca:	4c 93       	st	X, r20
 6cc:	11 97       	sbiw	r26, 0x01	; 1
 6ce:	12 96       	adiw	r26, 0x02	; 2
 6d0:	3c 93       	st	X, r19
 6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <dtoa_prf+0xc2>
 6d4:	3e e6       	ldi	r19, 0x6E	; 110
 6d6:	f6 01       	movw	r30, r12
 6d8:	30 83       	st	Z, r19
 6da:	41 e6       	ldi	r20, 0x61	; 97
 6dc:	41 83       	std	Z+1, r20	; 0x01
 6de:	32 83       	std	Z+2, r19	; 0x02
 6e0:	fc 01       	movw	r30, r24
 6e2:	32 2f       	mov	r19, r18
 6e4:	40 e2       	ldi	r20, 0x20	; 32
 6e6:	33 23       	and	r19, r19
 6e8:	09 f4       	brne	.+2      	; 0x6ec <dtoa_prf+0xce>
 6ea:	42 c0       	rjmp	.+132    	; 0x770 <dtoa_prf+0x152>
 6ec:	41 93       	st	Z+, r20
 6ee:	31 50       	subi	r19, 0x01	; 1
 6f0:	fa cf       	rjmp	.-12     	; 0x6e6 <dtoa_prf+0xc8>
 6f2:	42 ff       	sbrs	r20, 2
 6f4:	44 c0       	rjmp	.+136    	; 0x77e <dtoa_prf+0x160>
 6f6:	91 11       	cpse	r25, r1
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <dtoa_prf+0xe0>
 6fa:	83 e0       	ldi	r24, 0x03	; 3
 6fc:	01 c0       	rjmp	.+2      	; 0x700 <dtoa_prf+0xe2>
 6fe:	84 e0       	ldi	r24, 0x04	; 4
 700:	81 17       	cp	r24, r17
 702:	18 f4       	brcc	.+6      	; 0x70a <dtoa_prf+0xec>
 704:	21 2f       	mov	r18, r17
 706:	28 1b       	sub	r18, r24
 708:	01 c0       	rjmp	.+2      	; 0x70c <dtoa_prf+0xee>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	51 11       	cpse	r21, r1
 70e:	0b c0       	rjmp	.+22     	; 0x726 <dtoa_prf+0x108>
 710:	f6 01       	movw	r30, r12
 712:	82 2f       	mov	r24, r18
 714:	30 e2       	ldi	r19, 0x20	; 32
 716:	88 23       	and	r24, r24
 718:	19 f0       	breq	.+6      	; 0x720 <dtoa_prf+0x102>
 71a:	31 93       	st	Z+, r19
 71c:	81 50       	subi	r24, 0x01	; 1
 71e:	fb cf       	rjmp	.-10     	; 0x716 <dtoa_prf+0xf8>
 720:	c2 0e       	add	r12, r18
 722:	d1 1c       	adc	r13, r1
 724:	20 e0       	ldi	r18, 0x00	; 0
 726:	99 23       	and	r25, r25
 728:	29 f0       	breq	.+10     	; 0x734 <dtoa_prf+0x116>
 72a:	d6 01       	movw	r26, r12
 72c:	9c 93       	st	X, r25
 72e:	f6 01       	movw	r30, r12
 730:	31 96       	adiw	r30, 0x01	; 1
 732:	6f 01       	movw	r12, r30
 734:	c6 01       	movw	r24, r12
 736:	03 96       	adiw	r24, 0x03	; 3
 738:	e2 fe       	sbrs	r14, 2
 73a:	0b c0       	rjmp	.+22     	; 0x752 <dtoa_prf+0x134>
 73c:	39 e4       	ldi	r19, 0x49	; 73
 73e:	d6 01       	movw	r26, r12
 740:	3c 93       	st	X, r19
 742:	3e e4       	ldi	r19, 0x4E	; 78
 744:	11 96       	adiw	r26, 0x01	; 1
 746:	3c 93       	st	X, r19
 748:	11 97       	sbiw	r26, 0x01	; 1
 74a:	36 e4       	ldi	r19, 0x46	; 70
 74c:	12 96       	adiw	r26, 0x02	; 2
 74e:	3c 93       	st	X, r19
 750:	07 c0       	rjmp	.+14     	; 0x760 <dtoa_prf+0x142>
 752:	39 e6       	ldi	r19, 0x69	; 105
 754:	f6 01       	movw	r30, r12
 756:	30 83       	st	Z, r19
 758:	3e e6       	ldi	r19, 0x6E	; 110
 75a:	31 83       	std	Z+1, r19	; 0x01
 75c:	36 e6       	ldi	r19, 0x66	; 102
 75e:	32 83       	std	Z+2, r19	; 0x02
 760:	fc 01       	movw	r30, r24
 762:	32 2f       	mov	r19, r18
 764:	40 e2       	ldi	r20, 0x20	; 32
 766:	33 23       	and	r19, r19
 768:	19 f0       	breq	.+6      	; 0x770 <dtoa_prf+0x152>
 76a:	41 93       	st	Z+, r20
 76c:	31 50       	subi	r19, 0x01	; 1
 76e:	fb cf       	rjmp	.-10     	; 0x766 <dtoa_prf+0x148>
 770:	fc 01       	movw	r30, r24
 772:	e2 0f       	add	r30, r18
 774:	f1 1d       	adc	r31, r1
 776:	10 82       	st	Z, r1
 778:	8e ef       	ldi	r24, 0xFE	; 254
 77a:	9f ef       	ldi	r25, 0xFF	; 255
 77c:	a6 c0       	rjmp	.+332    	; 0x8ca <__stack+0x6b>
 77e:	21 e0       	ldi	r18, 0x01	; 1
 780:	30 e0       	ldi	r19, 0x00	; 0
 782:	91 11       	cpse	r25, r1
 784:	02 c0       	rjmp	.+4      	; 0x78a <dtoa_prf+0x16c>
 786:	20 e0       	ldi	r18, 0x00	; 0
 788:	30 e0       	ldi	r19, 0x00	; 0
 78a:	16 16       	cp	r1, r22
 78c:	17 06       	cpc	r1, r23
 78e:	1c f4       	brge	.+6      	; 0x796 <dtoa_prf+0x178>
 790:	fb 01       	movw	r30, r22
 792:	31 96       	adiw	r30, 0x01	; 1
 794:	02 c0       	rjmp	.+4      	; 0x79a <dtoa_prf+0x17c>
 796:	e1 e0       	ldi	r30, 0x01	; 1
 798:	f0 e0       	ldi	r31, 0x00	; 0
 79a:	2e 0f       	add	r18, r30
 79c:	3f 1f       	adc	r19, r31
 79e:	bb 20       	and	r11, r11
 7a0:	21 f0       	breq	.+8      	; 0x7aa <dtoa_prf+0x18c>
 7a2:	eb 2d       	mov	r30, r11
 7a4:	f0 e0       	ldi	r31, 0x00	; 0
 7a6:	31 96       	adiw	r30, 0x01	; 1
 7a8:	02 c0       	rjmp	.+4      	; 0x7ae <dtoa_prf+0x190>
 7aa:	e0 e0       	ldi	r30, 0x00	; 0
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	2e 0f       	add	r18, r30
 7b0:	3f 1f       	adc	r19, r31
 7b2:	e1 2f       	mov	r30, r17
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	2e 17       	cp	r18, r30
 7b8:	3f 07       	cpc	r19, r31
 7ba:	1c f4       	brge	.+6      	; 0x7c2 <dtoa_prf+0x1a4>
 7bc:	12 1b       	sub	r17, r18
 7be:	21 2f       	mov	r18, r17
 7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <dtoa_prf+0x1a6>
 7c2:	20 e0       	ldi	r18, 0x00	; 0
 7c4:	8e 2d       	mov	r24, r14
 7c6:	88 71       	andi	r24, 0x18	; 24
 7c8:	59 f4       	brne	.+22     	; 0x7e0 <dtoa_prf+0x1c2>
 7ca:	f6 01       	movw	r30, r12
 7cc:	82 2f       	mov	r24, r18
 7ce:	30 e2       	ldi	r19, 0x20	; 32
 7d0:	88 23       	and	r24, r24
 7d2:	19 f0       	breq	.+6      	; 0x7da <dtoa_prf+0x1bc>
 7d4:	31 93       	st	Z+, r19
 7d6:	81 50       	subi	r24, 0x01	; 1
 7d8:	fb cf       	rjmp	.-10     	; 0x7d0 <dtoa_prf+0x1b2>
 7da:	c2 0e       	add	r12, r18
 7dc:	d1 1c       	adc	r13, r1
 7de:	20 e0       	ldi	r18, 0x00	; 0
 7e0:	99 23       	and	r25, r25
 7e2:	29 f0       	breq	.+10     	; 0x7ee <dtoa_prf+0x1d0>
 7e4:	d6 01       	movw	r26, r12
 7e6:	9c 93       	st	X, r25
 7e8:	f6 01       	movw	r30, r12
 7ea:	31 96       	adiw	r30, 0x01	; 1
 7ec:	6f 01       	movw	r12, r30
 7ee:	51 11       	cpse	r21, r1
 7f0:	0b c0       	rjmp	.+22     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7f2:	f6 01       	movw	r30, r12
 7f4:	82 2f       	mov	r24, r18
 7f6:	90 e3       	ldi	r25, 0x30	; 48
 7f8:	88 23       	and	r24, r24
 7fa:	19 f0       	breq	.+6      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 7fc:	91 93       	st	Z+, r25
 7fe:	81 50       	subi	r24, 0x01	; 1
 800:	fb cf       	rjmp	.-10     	; 0x7f8 <dtoa_prf+0x1da>
 802:	c2 0e       	add	r12, r18
 804:	d1 1c       	adc	r13, r1
 806:	20 e0       	ldi	r18, 0x00	; 0
 808:	0f 2d       	mov	r16, r15
 80a:	06 0f       	add	r16, r22
 80c:	9a 81       	ldd	r25, Y+2	; 0x02
 80e:	34 2f       	mov	r19, r20
 810:	30 71       	andi	r19, 0x10	; 16
 812:	44 ff       	sbrs	r20, 4
 814:	03 c0       	rjmp	.+6      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 816:	91 33       	cpi	r25, 0x31	; 49
 818:	09 f4       	brne	.+2      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
 81a:	01 50       	subi	r16, 0x01	; 1
 81c:	10 16       	cp	r1, r16
 81e:	24 f4       	brge	.+8      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 820:	09 30       	cpi	r16, 0x09	; 9
 822:	18 f0       	brcs	.+6      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 824:	08 e0       	ldi	r16, 0x08	; 8
 826:	01 c0       	rjmp	.+2      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 828:	01 e0       	ldi	r16, 0x01	; 1
 82a:	ab 01       	movw	r20, r22
 82c:	77 ff       	sbrs	r23, 7
 82e:	02 c0       	rjmp	.+4      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 830:	40 e0       	ldi	r20, 0x00	; 0
 832:	50 e0       	ldi	r21, 0x00	; 0
 834:	fb 01       	movw	r30, r22
 836:	e4 1b       	sub	r30, r20
 838:	f5 0b       	sbc	r31, r21
 83a:	a1 e0       	ldi	r26, 0x01	; 1
 83c:	b0 e0       	ldi	r27, 0x00	; 0
 83e:	ac 0f       	add	r26, r28
 840:	bd 1f       	adc	r27, r29
 842:	ea 0f       	add	r30, r26
 844:	fb 1f       	adc	r31, r27
 846:	8e e2       	ldi	r24, 0x2E	; 46
 848:	a8 2e       	mov	r10, r24
 84a:	4b 01       	movw	r8, r22
 84c:	80 1a       	sub	r8, r16
 84e:	91 08       	sbc	r9, r1
 850:	0b 2d       	mov	r16, r11
 852:	10 e0       	ldi	r17, 0x00	; 0
 854:	11 95       	neg	r17
 856:	01 95       	neg	r16
 858:	11 09       	sbc	r17, r1
 85a:	4f 3f       	cpi	r20, 0xFF	; 255
 85c:	bf ef       	ldi	r27, 0xFF	; 255
 85e:	5b 07       	cpc	r21, r27
 860:	21 f4       	brne	.+8      	; 0x86a <__stack+0xb>
 862:	d6 01       	movw	r26, r12
 864:	ac 92       	st	X, r10
 866:	11 96       	adiw	r26, 0x01	; 1
 868:	6d 01       	movw	r12, r26
 86a:	64 17       	cp	r22, r20
 86c:	75 07       	cpc	r23, r21
 86e:	2c f0       	brlt	.+10     	; 0x87a <__stack+0x1b>
 870:	84 16       	cp	r8, r20
 872:	95 06       	cpc	r9, r21
 874:	14 f4       	brge	.+4      	; 0x87a <__stack+0x1b>
 876:	81 81       	ldd	r24, Z+1	; 0x01
 878:	01 c0       	rjmp	.+2      	; 0x87c <__stack+0x1d>
 87a:	80 e3       	ldi	r24, 0x30	; 48
 87c:	41 50       	subi	r20, 0x01	; 1
 87e:	51 09       	sbc	r21, r1
 880:	31 96       	adiw	r30, 0x01	; 1
 882:	d6 01       	movw	r26, r12
 884:	11 96       	adiw	r26, 0x01	; 1
 886:	7d 01       	movw	r14, r26
 888:	40 17       	cp	r20, r16
 88a:	51 07       	cpc	r21, r17
 88c:	24 f0       	brlt	.+8      	; 0x896 <__stack+0x37>
 88e:	d6 01       	movw	r26, r12
 890:	8c 93       	st	X, r24
 892:	67 01       	movw	r12, r14
 894:	e2 cf       	rjmp	.-60     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 896:	64 17       	cp	r22, r20
 898:	75 07       	cpc	r23, r21
 89a:	39 f4       	brne	.+14     	; 0x8aa <__stack+0x4b>
 89c:	96 33       	cpi	r25, 0x36	; 54
 89e:	20 f4       	brcc	.+8      	; 0x8a8 <__stack+0x49>
 8a0:	95 33       	cpi	r25, 0x35	; 53
 8a2:	19 f4       	brne	.+6      	; 0x8aa <__stack+0x4b>
 8a4:	31 11       	cpse	r19, r1
 8a6:	01 c0       	rjmp	.+2      	; 0x8aa <__stack+0x4b>
 8a8:	81 e3       	ldi	r24, 0x31	; 49
 8aa:	f6 01       	movw	r30, r12
 8ac:	80 83       	st	Z, r24
 8ae:	f7 01       	movw	r30, r14
 8b0:	82 2f       	mov	r24, r18
 8b2:	90 e2       	ldi	r25, 0x20	; 32
 8b4:	88 23       	and	r24, r24
 8b6:	19 f0       	breq	.+6      	; 0x8be <__stack+0x5f>
 8b8:	91 93       	st	Z+, r25
 8ba:	81 50       	subi	r24, 0x01	; 1
 8bc:	fb cf       	rjmp	.-10     	; 0x8b4 <__stack+0x55>
 8be:	f7 01       	movw	r30, r14
 8c0:	e2 0f       	add	r30, r18
 8c2:	f1 1d       	adc	r31, r1
 8c4:	10 82       	st	Z, r1
 8c6:	80 e0       	ldi	r24, 0x00	; 0
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	29 96       	adiw	r28, 0x09	; 9
 8cc:	ec e0       	ldi	r30, 0x0C	; 12
 8ce:	0c 94 63 05 	jmp	0xac6	; 0xac6 <__epilogue_restores__+0xc>

000008d2 <__ftoa_engine>:
 8d2:	28 30       	cpi	r18, 0x08	; 8
 8d4:	08 f0       	brcs	.+2      	; 0x8d8 <__ftoa_engine+0x6>
 8d6:	27 e0       	ldi	r18, 0x07	; 7
 8d8:	33 27       	eor	r19, r19
 8da:	da 01       	movw	r26, r20
 8dc:	99 0f       	add	r25, r25
 8de:	31 1d       	adc	r19, r1
 8e0:	87 fd       	sbrc	r24, 7
 8e2:	91 60       	ori	r25, 0x01	; 1
 8e4:	00 96       	adiw	r24, 0x00	; 0
 8e6:	61 05       	cpc	r22, r1
 8e8:	71 05       	cpc	r23, r1
 8ea:	39 f4       	brne	.+14     	; 0x8fa <__ftoa_engine+0x28>
 8ec:	32 60       	ori	r19, 0x02	; 2
 8ee:	2e 5f       	subi	r18, 0xFE	; 254
 8f0:	3d 93       	st	X+, r19
 8f2:	30 e3       	ldi	r19, 0x30	; 48
 8f4:	2a 95       	dec	r18
 8f6:	e1 f7       	brne	.-8      	; 0x8f0 <__ftoa_engine+0x1e>
 8f8:	08 95       	ret
 8fa:	9f 3f       	cpi	r25, 0xFF	; 255
 8fc:	30 f0       	brcs	.+12     	; 0x90a <__ftoa_engine+0x38>
 8fe:	80 38       	cpi	r24, 0x80	; 128
 900:	71 05       	cpc	r23, r1
 902:	61 05       	cpc	r22, r1
 904:	09 f0       	breq	.+2      	; 0x908 <__ftoa_engine+0x36>
 906:	3c 5f       	subi	r19, 0xFC	; 252
 908:	3c 5f       	subi	r19, 0xFC	; 252
 90a:	3d 93       	st	X+, r19
 90c:	91 30       	cpi	r25, 0x01	; 1
 90e:	08 f0       	brcs	.+2      	; 0x912 <__ftoa_engine+0x40>
 910:	80 68       	ori	r24, 0x80	; 128
 912:	91 1d       	adc	r25, r1
 914:	df 93       	push	r29
 916:	cf 93       	push	r28
 918:	1f 93       	push	r17
 91a:	0f 93       	push	r16
 91c:	ff 92       	push	r15
 91e:	ef 92       	push	r14
 920:	19 2f       	mov	r17, r25
 922:	98 7f       	andi	r25, 0xF8	; 248
 924:	96 95       	lsr	r25
 926:	e9 2f       	mov	r30, r25
 928:	96 95       	lsr	r25
 92a:	96 95       	lsr	r25
 92c:	e9 0f       	add	r30, r25
 92e:	ff 27       	eor	r31, r31
 930:	e2 55       	subi	r30, 0x52	; 82
 932:	ff 4f       	sbci	r31, 0xFF	; 255
 934:	99 27       	eor	r25, r25
 936:	33 27       	eor	r19, r19
 938:	ee 24       	eor	r14, r14
 93a:	ff 24       	eor	r15, r15
 93c:	a7 01       	movw	r20, r14
 93e:	e7 01       	movw	r28, r14
 940:	05 90       	lpm	r0, Z+
 942:	08 94       	sec
 944:	07 94       	ror	r0
 946:	28 f4       	brcc	.+10     	; 0x952 <__ftoa_engine+0x80>
 948:	36 0f       	add	r19, r22
 94a:	e7 1e       	adc	r14, r23
 94c:	f8 1e       	adc	r15, r24
 94e:	49 1f       	adc	r20, r25
 950:	51 1d       	adc	r21, r1
 952:	66 0f       	add	r22, r22
 954:	77 1f       	adc	r23, r23
 956:	88 1f       	adc	r24, r24
 958:	99 1f       	adc	r25, r25
 95a:	06 94       	lsr	r0
 95c:	a1 f7       	brne	.-24     	; 0x946 <__ftoa_engine+0x74>
 95e:	05 90       	lpm	r0, Z+
 960:	07 94       	ror	r0
 962:	28 f4       	brcc	.+10     	; 0x96e <__ftoa_engine+0x9c>
 964:	e7 0e       	add	r14, r23
 966:	f8 1e       	adc	r15, r24
 968:	49 1f       	adc	r20, r25
 96a:	56 1f       	adc	r21, r22
 96c:	c1 1d       	adc	r28, r1
 96e:	77 0f       	add	r23, r23
 970:	88 1f       	adc	r24, r24
 972:	99 1f       	adc	r25, r25
 974:	66 1f       	adc	r22, r22
 976:	06 94       	lsr	r0
 978:	a1 f7       	brne	.-24     	; 0x962 <__ftoa_engine+0x90>
 97a:	05 90       	lpm	r0, Z+
 97c:	07 94       	ror	r0
 97e:	28 f4       	brcc	.+10     	; 0x98a <__ftoa_engine+0xb8>
 980:	f8 0e       	add	r15, r24
 982:	49 1f       	adc	r20, r25
 984:	56 1f       	adc	r21, r22
 986:	c7 1f       	adc	r28, r23
 988:	d1 1d       	adc	r29, r1
 98a:	88 0f       	add	r24, r24
 98c:	99 1f       	adc	r25, r25
 98e:	66 1f       	adc	r22, r22
 990:	77 1f       	adc	r23, r23
 992:	06 94       	lsr	r0
 994:	a1 f7       	brne	.-24     	; 0x97e <__ftoa_engine+0xac>
 996:	05 90       	lpm	r0, Z+
 998:	07 94       	ror	r0
 99a:	20 f4       	brcc	.+8      	; 0x9a4 <__ftoa_engine+0xd2>
 99c:	49 0f       	add	r20, r25
 99e:	56 1f       	adc	r21, r22
 9a0:	c7 1f       	adc	r28, r23
 9a2:	d8 1f       	adc	r29, r24
 9a4:	99 0f       	add	r25, r25
 9a6:	66 1f       	adc	r22, r22
 9a8:	77 1f       	adc	r23, r23
 9aa:	88 1f       	adc	r24, r24
 9ac:	06 94       	lsr	r0
 9ae:	a9 f7       	brne	.-22     	; 0x99a <__ftoa_engine+0xc8>
 9b0:	84 91       	lpm	r24, Z
 9b2:	10 95       	com	r17
 9b4:	17 70       	andi	r17, 0x07	; 7
 9b6:	41 f0       	breq	.+16     	; 0x9c8 <__ftoa_engine+0xf6>
 9b8:	d6 95       	lsr	r29
 9ba:	c7 95       	ror	r28
 9bc:	57 95       	ror	r21
 9be:	47 95       	ror	r20
 9c0:	f7 94       	ror	r15
 9c2:	e7 94       	ror	r14
 9c4:	1a 95       	dec	r17
 9c6:	c1 f7       	brne	.-16     	; 0x9b8 <__ftoa_engine+0xe6>
 9c8:	e4 e5       	ldi	r30, 0x54	; 84
 9ca:	f0 e0       	ldi	r31, 0x00	; 0
 9cc:	68 94       	set
 9ce:	15 90       	lpm	r1, Z+
 9d0:	15 91       	lpm	r17, Z+
 9d2:	35 91       	lpm	r19, Z+
 9d4:	65 91       	lpm	r22, Z+
 9d6:	95 91       	lpm	r25, Z+
 9d8:	05 90       	lpm	r0, Z+
 9da:	7f e2       	ldi	r23, 0x2F	; 47
 9dc:	73 95       	inc	r23
 9de:	e1 18       	sub	r14, r1
 9e0:	f1 0a       	sbc	r15, r17
 9e2:	43 0b       	sbc	r20, r19
 9e4:	56 0b       	sbc	r21, r22
 9e6:	c9 0b       	sbc	r28, r25
 9e8:	d0 09       	sbc	r29, r0
 9ea:	c0 f7       	brcc	.-16     	; 0x9dc <__ftoa_engine+0x10a>
 9ec:	e1 0c       	add	r14, r1
 9ee:	f1 1e       	adc	r15, r17
 9f0:	43 1f       	adc	r20, r19
 9f2:	56 1f       	adc	r21, r22
 9f4:	c9 1f       	adc	r28, r25
 9f6:	d0 1d       	adc	r29, r0
 9f8:	7e f4       	brtc	.+30     	; 0xa18 <__ftoa_engine+0x146>
 9fa:	70 33       	cpi	r23, 0x30	; 48
 9fc:	11 f4       	brne	.+4      	; 0xa02 <__ftoa_engine+0x130>
 9fe:	8a 95       	dec	r24
 a00:	e6 cf       	rjmp	.-52     	; 0x9ce <__ftoa_engine+0xfc>
 a02:	e8 94       	clt
 a04:	01 50       	subi	r16, 0x01	; 1
 a06:	30 f0       	brcs	.+12     	; 0xa14 <__ftoa_engine+0x142>
 a08:	08 0f       	add	r16, r24
 a0a:	0a f4       	brpl	.+2      	; 0xa0e <__ftoa_engine+0x13c>
 a0c:	00 27       	eor	r16, r16
 a0e:	02 17       	cp	r16, r18
 a10:	08 f4       	brcc	.+2      	; 0xa14 <__ftoa_engine+0x142>
 a12:	20 2f       	mov	r18, r16
 a14:	23 95       	inc	r18
 a16:	02 2f       	mov	r16, r18
 a18:	7a 33       	cpi	r23, 0x3A	; 58
 a1a:	28 f0       	brcs	.+10     	; 0xa26 <__ftoa_engine+0x154>
 a1c:	79 e3       	ldi	r23, 0x39	; 57
 a1e:	7d 93       	st	X+, r23
 a20:	2a 95       	dec	r18
 a22:	e9 f7       	brne	.-6      	; 0xa1e <__ftoa_engine+0x14c>
 a24:	10 c0       	rjmp	.+32     	; 0xa46 <__ftoa_engine+0x174>
 a26:	7d 93       	st	X+, r23
 a28:	2a 95       	dec	r18
 a2a:	89 f6       	brne	.-94     	; 0x9ce <__ftoa_engine+0xfc>
 a2c:	06 94       	lsr	r0
 a2e:	97 95       	ror	r25
 a30:	67 95       	ror	r22
 a32:	37 95       	ror	r19
 a34:	17 95       	ror	r17
 a36:	17 94       	ror	r1
 a38:	e1 18       	sub	r14, r1
 a3a:	f1 0a       	sbc	r15, r17
 a3c:	43 0b       	sbc	r20, r19
 a3e:	56 0b       	sbc	r21, r22
 a40:	c9 0b       	sbc	r28, r25
 a42:	d0 09       	sbc	r29, r0
 a44:	98 f0       	brcs	.+38     	; 0xa6c <__ftoa_engine+0x19a>
 a46:	23 95       	inc	r18
 a48:	7e 91       	ld	r23, -X
 a4a:	73 95       	inc	r23
 a4c:	7a 33       	cpi	r23, 0x3A	; 58
 a4e:	08 f0       	brcs	.+2      	; 0xa52 <__ftoa_engine+0x180>
 a50:	70 e3       	ldi	r23, 0x30	; 48
 a52:	7c 93       	st	X, r23
 a54:	20 13       	cpse	r18, r16
 a56:	b8 f7       	brcc	.-18     	; 0xa46 <__ftoa_engine+0x174>
 a58:	7e 91       	ld	r23, -X
 a5a:	70 61       	ori	r23, 0x10	; 16
 a5c:	7d 93       	st	X+, r23
 a5e:	30 f0       	brcs	.+12     	; 0xa6c <__ftoa_engine+0x19a>
 a60:	83 95       	inc	r24
 a62:	71 e3       	ldi	r23, 0x31	; 49
 a64:	7d 93       	st	X+, r23
 a66:	70 e3       	ldi	r23, 0x30	; 48
 a68:	2a 95       	dec	r18
 a6a:	e1 f7       	brne	.-8      	; 0xa64 <__ftoa_engine+0x192>
 a6c:	11 24       	eor	r1, r1
 a6e:	ef 90       	pop	r14
 a70:	ff 90       	pop	r15
 a72:	0f 91       	pop	r16
 a74:	1f 91       	pop	r17
 a76:	cf 91       	pop	r28
 a78:	df 91       	pop	r29
 a7a:	99 27       	eor	r25, r25
 a7c:	87 fd       	sbrc	r24, 7
 a7e:	90 95       	com	r25
 a80:	08 95       	ret

00000a82 <__prologue_saves__>:
 a82:	2f 92       	push	r2
 a84:	3f 92       	push	r3
 a86:	4f 92       	push	r4
 a88:	5f 92       	push	r5
 a8a:	6f 92       	push	r6
 a8c:	7f 92       	push	r7
 a8e:	8f 92       	push	r8
 a90:	9f 92       	push	r9
 a92:	af 92       	push	r10
 a94:	bf 92       	push	r11
 a96:	cf 92       	push	r12
 a98:	df 92       	push	r13
 a9a:	ef 92       	push	r14
 a9c:	ff 92       	push	r15
 a9e:	0f 93       	push	r16
 aa0:	1f 93       	push	r17
 aa2:	cf 93       	push	r28
 aa4:	df 93       	push	r29
 aa6:	cd b7       	in	r28, 0x3d	; 61
 aa8:	de b7       	in	r29, 0x3e	; 62
 aaa:	ca 1b       	sub	r28, r26
 aac:	db 0b       	sbc	r29, r27
 aae:	0f b6       	in	r0, 0x3f	; 63
 ab0:	f8 94       	cli
 ab2:	de bf       	out	0x3e, r29	; 62
 ab4:	0f be       	out	0x3f, r0	; 63
 ab6:	cd bf       	out	0x3d, r28	; 61
 ab8:	09 94       	ijmp

00000aba <__epilogue_restores__>:
 aba:	2a 88       	ldd	r2, Y+18	; 0x12
 abc:	39 88       	ldd	r3, Y+17	; 0x11
 abe:	48 88       	ldd	r4, Y+16	; 0x10
 ac0:	5f 84       	ldd	r5, Y+15	; 0x0f
 ac2:	6e 84       	ldd	r6, Y+14	; 0x0e
 ac4:	7d 84       	ldd	r7, Y+13	; 0x0d
 ac6:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac8:	9b 84       	ldd	r9, Y+11	; 0x0b
 aca:	aa 84       	ldd	r10, Y+10	; 0x0a
 acc:	b9 84       	ldd	r11, Y+9	; 0x09
 ace:	c8 84       	ldd	r12, Y+8	; 0x08
 ad0:	df 80       	ldd	r13, Y+7	; 0x07
 ad2:	ee 80       	ldd	r14, Y+6	; 0x06
 ad4:	fd 80       	ldd	r15, Y+5	; 0x05
 ad6:	0c 81       	ldd	r16, Y+4	; 0x04
 ad8:	1b 81       	ldd	r17, Y+3	; 0x03
 ada:	aa 81       	ldd	r26, Y+2	; 0x02
 adc:	b9 81       	ldd	r27, Y+1	; 0x01
 ade:	ce 0f       	add	r28, r30
 ae0:	d1 1d       	adc	r29, r1
 ae2:	0f b6       	in	r0, 0x3f	; 63
 ae4:	f8 94       	cli
 ae6:	de bf       	out	0x3e, r29	; 62
 ae8:	0f be       	out	0x3f, r0	; 63
 aea:	cd bf       	out	0x3d, r28	; 61
 aec:	ed 01       	movw	r28, r26
 aee:	08 95       	ret

00000af0 <_exit>:
 af0:	f8 94       	cli

00000af2 <__stop_program>:
 af2:	ff cf       	rjmp	.-2      	; 0xaf2 <__stop_program>
